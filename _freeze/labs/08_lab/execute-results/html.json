{
  "hash": "f0fc95b2a96dc7e1295980a2f9d15a90",
  "result": {
    "markdown": "---\ntitle: \"Lab 8\"\nauthor: \"YOUR NAME HERE\"\ndate: \"2023-10-18\"\nformat: \n  html:\n    embed-resources: true\n    code-tools: true\n    code-summary: \"Code\"\n---\n\n\nRemember, you must submit *both* your .Rmd and the compiled .html in order to receive full credit! In addition, to receive full credit, your code output and plots must be correctly formatted.\n\n### Collaborators\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# LOAD ANY RELEVANT PACKAGES HERE\n```\n:::\n\n\n\n## A. Writing a simulation.\n\nSuppose $X_i\\sim \\mathrm{N}(0, 1)$ for $1\\leq i\\leq n$, for some $n$. \n\n1. For $n=10, 20, 40, 80, 160, 320, 640, 1280$, carry out a simulation to estimate $E(\\mathrm{max}(X_1,\\ldots, X_n))$. For each value of $n$, simulate 1000 values of $\\mathrm{max}(X_1,\\ldots, X_n)$ and compute their mean. Store these means in a vector.\n\n2. Create a line graph with $n$ on the x-axis and your simulation-based estimates of $E(\\mathrm{max}(X_1,\\ldots, X_n))$ on the y-axis. Comment on your findings. Does there seem to be an upper limit of $E(\\mathrm{max}(X_1,\\ldots, X_n))$?\n\n## B. One-dimensional random walks\n\nIn this part, you will simulate a one-dimensional random walk. Suppose you are at the point $x$ at time $t$. At time $t+1$, the probability of moving forwards to $x+1$ is $p$ and the chance of moving backwards to $x-1$ is $1-p$. Assume that at time $t=1$, you are at $x_1=0$.\n\n3. Write a function `random_walk()` that takes as input a numeric `n_steps` and a numeric $p$ and simulates `n_steps` steps of the one-dimensional random walk with forward probability $p$. You may have other input arguments if desired. The output should be a length vector of length `n_steps` starting with 0 where the $i$th entry represents the location of the random walker at time $t=i$. For example, `random_walk(5, .5)` may return the vector $(0, 1, 2, 1, 2)$. \n\n4. Use your function to generate a random walk of 500 steps with probability $.6$ and generate a line graph with $t=1,\\ldots, 500$ on the x-axis and $x_1,\\ldots, x_{500}$ on the y-axis.\n\n5. Use your function to generate two more random walks of 500 steps with probability $.6$ and create a line graph with all three of your random walks, using different colors for each walk.\n",
    "supporting": [
      "08_lab_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}