{
  "hash": "30ed84d98bf7a717afb1ebc3bd1e67d8",
  "result": {
    "markdown": "---\ntitle: \"Lab 7\"\nauthor: \"YOUR NAME HERE\"\ndate: \"2023-10-18\"\nformat: \n  html:\n    embed-resources: true\n    code-tools: true\n    code-summary: \"Code\"\n---\n\n\nRemember, you must submit *both* your .Rmd and the compiled .html in order to receive full credit! In addition, to receive full credit, your code output and plots must be correctly formatted.\n\n### Collaborators\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# LOAD ANY RELEVANT PACKAGES HERE\n```\n:::\n\n\n## A. Skewness and Kurtosis\n\nSkewness describes how asymmetrical the distribution of a numerical variable is around its mean. Given observations $x_1,\\ldots, x_n$, we can calculate the sample skewness $s$ of a variable using the following formula:\n\n$$s = \\frac{\\frac{1}{n}\\sum\\limits_{i=1}^n(x_i-\\overline{x})^3}{\\left[\\frac{1}{n}\\sum\\limits_{i=1}^n(x_i-\\overline{x})^2\\right]^{3/2}}$$\nKurtosis is a measure of the \"tailedness\" of the distribution of a numerical variable is around its mean. Higher values of kurtosis indicate more extreme outliers. Given observations $x_1,\\ldots, x_n$, we can calculate the sample kurtosis $k$ of a variable using the following formula:\n\n$$k = \\frac{\\frac{1}{n}\\sum\\limits_{i=1}^n(x_i-\\overline{x})^4}{\\left[\\frac{1}{n}\\sum\\limits_{i=1}^n(x_i-\\overline{x})^2\\right]^{2}}-3$$\n\n1. Write a function `skewness()` that takes as input a numeric vector `x` and returns the sample skewness. There are functions in R that compute skewness, but you cannot use any of them--write your own implementation.\n\n2. Write a function `kurtosis()` that takes as input a numeric vector `x` and returns the sample skewness. There are functions in R that compute kurtosis, but you cannot use any of them--write your own implementation.\n\n3. Use your function to compute the sample skewness of the `arr_delay` variable in the `flights` dataset contained in the `nycflights13` package.\n\n4. Use your function to compute the sample kurtosis of the `arr_delay` variable in the `flights` dataset contained in the `nycflights13` package.\n\n## B. Finding an error\n\nSuppose you have two teams of runners participating in a 5k. We wish to write a function that takes as input two vectors representing the times of the runners in each team and returns a list of two vectors representing the ranks of each team's runners.\n\nFor example, if the first team's times are `c(16.8, 21.2, 19.1)` and the second team's times are `c(17.2, 18.1, 20.0)`, the function should return `c(1, 6, 4)` for the first team and `c(2, 3, 5)` for the second team. \n\nBelow is a draft version of the function `get_runner_ranks()`. However, there is an error somewhere. Use any method we discussed in class to identify the error.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_runner_ranks <- function(x, y) {\n  # combine all runner times\n  combined_times <- c(x, y) \n  \n  # sort all runner times from fastest to slowest\n  sort(combined_times, decreasing = T)\n  \n  # create ranks vectors\n  ranks_x <- numeric(length(x))\n  ranks_y <- numeric(length(y))\n  \n  for (i in seq_along(ranks_x)) {\n    # look up rank of time i in x in combined_times\n    ranks_x[i] <- match(x[i], combined_times)\n  }\n  \n  for (i in seq_along(ranks_y)) {\n    # look up rank of time i in y in combined_times\n    ranks_y[i] <- match(y[i], combined_times)\n  }\n  \n  # return a list of first team and second team ranks\n  return(list(x = ranks_x, y = ranks_y))\n}\n```\n:::\n\n\n5. Below, write a corrected version of `get_runner_ranks()` and compute `get_runner_ranks(c(16.8, 21.2, 19.1), c(17.2, 18.1, 20.0))`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_runner_ranks <- function(x, y) {\n  # YOUR CODE HERE\n}\n```\n:::\n\n\n6. Explain in your own words what the error was.\n",
    "supporting": [
      "07_lab_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}