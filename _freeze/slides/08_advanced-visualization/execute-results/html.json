{
  "hash": "5c010f6117d63014de692fd44a4269c4",
  "result": {
    "markdown": "---\ntitle: \"MATH167R: Data visualization\"\nauthor: \"Peter Gao\"\nformat: \n  revealjs:\n    theme: [./slides.scss, ../theme.scss]\neditor: source\n---\n\n\n## Warm-up\n\n1.  What does the following code do?\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    library(palmerpenguins)\n    library(ggplot2)\n    data(penguins)\n    ggplot(penguins, \n           aes(x = flipper_length_mm, \n               y = body_mass_g, \n               color = species)) + \n      geom_point()\n    ```\n    :::\n\n\n## Warm-up\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nlibrary(ggplot2)\ndata(penguins)\nggplot(penguins, \n       aes(x = flipper_length_mm, \n           y = body_mass_g, \n           color = species)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n## Overview of today\n\n-   Reviewing `ggplot2`\n-   Advanced data visualization\n-   Styling R visualizations\n\n## Review: grammar of graphics\n\nThe three basic layers:\n\n1.  **Data**: a data frame with all of the variables of interest\n2.  **Aesthetics**: graphical dimensions like `x`, `y`, `color`, `shape`, and more.\n3.  **Geometries**: the specific markings used to illustrate your variables and aesthetics.\n\n## Review: Cats and Dogs\n\nSuppose we have the following data on animal weights. How can we compute the average weights of cats and dogs? \\[example from [Andrew Heiss](https://datavizf23.classes.andrewheiss.com/slides/04-slides.html)\\]\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(animals, n = 10)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   animal weight\n   <chr>   <dbl>\n 1 Cat      18.1\n 2 Dog      37.9\n 3 Cat      24.2\n 4 Dog      58.8\n 5 Dog      51.7\n 6 Dog      38.5\n 7 Cat      22.2\n 8 Dog      27.8\n 9 Cat      17.4\n10 Cat      24.3\n```\n:::\n:::\n\n\n## Code for generating data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n# example from Andrew Heiss\nset.seed(12)\nanimals <- tibble(animal = c(rep(c(\"Small cat\", \"Big cat\"), each = 250), rep(\"Dog\", 500))) |> \n  mutate(weight = case_when(\n    animal == \"Small cat\" ~ rnorm(n(), 20, 5),\n    animal == \"Big cat\" ~ rnorm(n(), 60, 5),\n    animal == \"Dog\" ~ rnorm(n(), 40, 10)\n  )) |> \n  mutate(animal = ifelse(str_detect(animal, \"cat\"), \"Cat\", \"Dog\"))\n```\n:::\n\n\n## Review: Cats and Dogs\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_wt <- animals |>\n  group_by(animal) |>\n  summarize(mean_wt = mean(weight))\nmean_wt\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  animal mean_wt\n  <chr>    <dbl>\n1 Cat       40.2\n2 Dog       40.1\n```\n:::\n:::\n\n\nHow can we turn this into a visual?\n\n## Review: Cats and Dogs\n\nIn `ggplot2`, there are two geometries for bar plots: `geom_col()` and `geom_bar()`.\n\n-   The height of the bars of `geom_col()` represent numerical values in each group.\n-   The height of the bars of `geom_bar()` represent the number of rows for each group.\n\n## Review: Cats and Dogs\n\n\n::: {.cell layout-align=\"center\" fig.dim='[5,3.75]'}\n\n```{.r .cell-code}\nggplot(data = mean_wt, \n       aes(x = animal, y = mean_wt, fill = animal)) +\n  geom_col() +\n  ylab(\"Mean weight (lb)\")\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Review: Cats and Dogs\n\n\n::: {.cell layout-align=\"center\" fig.dim='[5,3.75]'}\n\n```{.r .cell-code}\n# construct named vector\nmean_wt_vec <- mean_wt$mean_wt\nnames(mean_wt_vec) <- mean_wt$animal\nbarplot(mean_wt_vec,\n        col = c(\"red\", \"blue\"),\n        ylab = \"Mean weight (lb)\")\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## If possible, show the data\n\n\n::: {.cell layout-align=\"center\" fig.dim='[5,3.75]'}\n\n```{.r .cell-code}\nggplot(animals, aes(x = animal, y = weight, color = animal)) +\n  geom_point(position = position_jitter(height = 0)) +\n  labs(x = NULL, y = \"Mean Weight (lb)\") +\n  guides(color = \"none\")\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## If possible, show the data\n\n\n::: {.cell layout-align=\"center\" fig.dim='[5,3.75]'}\n\n```{.r .cell-code}\nggplot(animals, aes(x = animal, \n                    y = weight, \n                    color = animal)) +\n  geom_boxplot() +\n  geom_point(position = position_jitter(height = 0), alpha = 0.5) +\n  labs(x = NULL, y = \"Mean weight (lb)\") +\n  guides(color = \"none\")\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Review: Cats and Dogs\n\nTakeaways:\n\n-   Data has to be in the right format to work with `ggplot2`\n-   Geometries can be combined for more complex visualizations\n-   Only showing summary statistics can be misleading and can hide information.\n\n## Gapminder data\n\n![](images/gapminder.png)\n\n[link](https://www.gapminder.org/tools/#$chart-type=bubbles&url=v1)\n\n## Gapminder data\n\n-   What changes do we see over time? What do we notice in this visualization?\n-   What questions arise? Do you have any doubts about this visualization?\n\n## Gapminder data\n\n\n::: {.cell layout-align=\"center\" fig.dim='[5,3.75]'}\n\n```{.r .cell-code}\nlibrary(gapminder)\ndata(gapminder)\nhead(gapminder)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  country     continent  year lifeExp      pop gdpPercap\n  <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n```\n:::\n:::\n\n\n## Gapminder data\n\n\n::: {.cell layout-align=\"center\" fig.dim='[5,3.75]'}\n\n```{.r .cell-code}\nsummary(gapminder)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        country        continent        year         lifeExp     \n Afghanistan:  12   Africa  :624   Min.   :1952   Min.   :23.60  \n Albania    :  12   Americas:300   1st Qu.:1966   1st Qu.:48.20  \n Algeria    :  12   Asia    :396   Median :1980   Median :60.71  \n Angola     :  12   Europe  :360   Mean   :1980   Mean   :59.47  \n Argentina  :  12   Oceania : 24   3rd Qu.:1993   3rd Qu.:70.85  \n Australia  :  12                  Max.   :2007   Max.   :82.60  \n (Other)    :1632                                                \n      pop              gdpPercap       \n Min.   :6.001e+04   Min.   :   241.2  \n 1st Qu.:2.794e+06   1st Qu.:  1202.1  \n Median :7.024e+06   Median :  3531.8  \n Mean   :2.960e+07   Mean   :  7215.3  \n 3rd Qu.:1.959e+07   3rd Qu.:  9325.5  \n Max.   :1.319e+09   Max.   :113523.1  \n                                       \n```\n:::\n:::\n\n\n## Gapminder data\n\nLet's work with the following data:\n\n\n::: {.cell layout-align=\"center\" fig.dim='[5,3.75]'}\n\n```{.r .cell-code}\ngapminder_2007 <- gapminder |> filter(year == 2007)\n```\n:::\n\n\nHow do we recreate the following plot?\n\n\n::: {.cell layout-align=\"center\" fig.dim='[7,3.75]'}\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Gapminder data\n\nWork with the people around you to recreate this plot:\n\n\n::: {.cell layout-align=\"center\" fig.dim='[7,3.75]'}\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Gapminder data\n\nHopefully, you produced something like this:\n\n\n::: {.cell layout-align=\"center\" fig.dim='[7,3.75]'}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007,\n       mapping = aes(x = gdpPercap,\n                     y = lifeExp,\n                     color = continent,\n                     size = pop)) +\n  geom_point() \n```\n:::\n\n\n## Playing with scales\n\n**Scales** are another layer we can add on top of our plot:\n\n\n::: {.cell layout-align=\"center\" fig.dim='[7,3.75]'}\n\n```{.r .cell-code}\nggplot(data = gapminder_2007,\n       mapping = aes(x = gdpPercap,\n                     y = lifeExp,\n                     color = continent,\n                     size = pop)) +\n  geom_point() +\n  scale_x_log10()\n```\n:::\n\n\nWhat do you expect the output to look like?\n\n## Playing with scales\n\n\n::: {.cell layout-align=\"center\" fig.dim='[7,3.75]'}\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Playing with scales\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(data = gapminder_2007,\n       mapping = aes(x = gdpPercap,\n                     y = lifeExp,\n                     color = continent,\n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() # discrete viridis color scale\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-20-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Small multiples\n\n*\"At the heart of quantitative reasoning is a single question: Compared to what? Small multiple designs, multivariate and data bountiful, answer directly by visually enforcing comparisons of changes, of the differences among objects, of the scope of alternatives. For a wide range of problems in data presentation, small multiples are the best design solution.\"*\n\n::: {style=\"text-align: right\"}\nEdward Tufte\n:::\n\n## Small multiples\n\nWe can often make comparisons clearer by splitting a plot into many \"small multiples\" which have the same axes:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-21-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Facets for small multiples\n\nSmall multiples are implemented in `ggplot2` via the `facet_wrap()` and `facet_grid()` functions:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(data = gapminder_2007,\n       mapping = aes(x = gdpPercap,\n                     y = lifeExp,\n                     color = continent,\n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  facet_wrap(~continent)\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Gapminder data\n\nWork with the people around you to recreate this plot:\n\n\n::: {.cell layout-align=\"center\" fig.dim='[7,4.75]'}\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Themes\n\n`ggplot2` provides a default theme: gray background, basic discrete color scheme, etc.\n\n\n::: {.cell layout-align=\"center\" fig.dim='[7,4.75]'}\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-24-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Other themes\n\nHowever, `ggplot2` also comes with additional themes that you can layer on top of your plots:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(penguins, \n       aes(x = flipper_length_mm, \n           y = body_mass_g, \n           color = species)) +\n  geom_point() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-25-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Other themes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(penguins, \n       aes(x = flipper_length_mm, \n           y = body_mass_g, \n           color = species)) +\n  geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-26-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Other themes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(penguins, \n       aes(x = flipper_length_mm, \n           y = body_mass_g, \n           color = species)) +\n  geom_point() +\n  theme_dark()\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-27-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Other themes\n\nOther themes can be obtained from the `ggthemes` package:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,7\"}\nlibrary(ggthemes)\nggplot(penguins, \n       aes(x = flipper_length_mm, \n           y = body_mass_g, \n           color = species)) +\n  geom_point() +\n  theme_economist_white()\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-28-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Other themes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(penguins, \n       aes(x = flipper_length_mm, \n           y = body_mass_g, \n           color = species)) +\n  geom_point() +\n  theme_wsj()\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-29-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Other themes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(penguins, \n       aes(x = flipper_length_mm, \n           y = body_mass_g, \n           color = species)) +\n  geom_point() +\n  theme_fivethirtyeight()\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-30-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Themes\n\nIf you want finer control over your plot appearance, you can dive into the `theme()` function:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(penguins, \n       aes(x = flipper_length_mm, \n           y = body_mass_g, \n           color = species)) +\n  geom_point() +\n  theme(legend.text = element_text(size = 30))\n```\n\n::: {.cell-output-display}\n![](08_advanced-visualization_files/figure-revealjs/unnamed-chunk-31-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Themes\n\nWithin the theme function, we can manipulate various **theme elements**:\n\n![](https://henrywang.nl/wp-content/uploads/2020/04/theme_elements.png)\n\n## Themes\n\nOther resources:\n\n- Clara Granell's [ggplot2 Theme System Cheatsheet](https://github.com/claragranell/ggplot2/blob/main/ggplot_theme_system_cheatsheet.pdf)\n- Andrew Heiss's [Ways to deal with long labels](https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/)\n- Chapter 8 of Kieran Healy's [Data Visualization](https://socviz.co/refineplots.html#change-the-appearance-of-plots-with-themes)\n- [How to create BBC style graphics](https://bbc.github.io/rcookbook/#how_to_create_bbc_style_graphics)\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "08_advanced-visualization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}