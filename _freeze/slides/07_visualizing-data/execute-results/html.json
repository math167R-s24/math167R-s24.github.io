{
  "hash": "632ffd28086a4302389fe1a96d48479e",
  "result": {
    "markdown": "---\ntitle: \"MATH167R: Data visualization\"\nauthor: \"Peter Gao\"\nformat: \n  revealjs:\n    theme: [./slides.scss, ../theme.scss]\neditor: visual\n---\n\n\n## Warm-up\n\n1.  What does the following code do?\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    flips <- factor(c(\"H\", \"T\", \"H\", \"H\"), levels = c(\"H\", \"T\"))\n    sum(as.numeric(flips))\n    ```\n    :::\n\n\n## Warm-up\n\n**Answer:**\n\n1.  \n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    flips <- factor(c(\"H\", \"T\", \"H\", \"H\"), levels = c(\"H\", \"T\"))\n    sum(as.numeric(flips))\n    ```\n    :::\n\n\n## Overview of today\n\n-   Data visualization in base R\n-   Data visualization with `ggplot2`\n-   Principles of data visualization\n\n# Data visualization in base R\n\n## Example: CalEnviroScreen\n\nPassed in 2012, SB 535 requires that 25% of revenue from California's cap-and-trade program be spent to benefit communities identified by CalEPA as \"disadvantaged,\" based on \"geographic, socioeconomic, public health, and environmental hazard criteria.\"\n\nWe will begin by downloading the data from [here](https://oehha.ca.gov/media/downloads/calenviroscreen/document/calenviroscreen40shpf2021shp.zip).\n\n![](https://oehha.ca.gov/sites/default/files/media/files/images/misc/ces4resultsmapimage.png)\n\n## Example: CalEnviroScreen {.smaller}\n\nThis is a shapefile, which contains data on each census tract in California. To read it into `R`, we will need the `sf` package, which you can install using `install.packages(\"sf\")`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nces_data <- st_read(\"~/MATH167R/data/calenviroscreen40shpf2021shp/\")\n```\n:::\n\n\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(ces_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sf\"         \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\nhead(ces_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 66 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -44775.05 ymin: -350085.7 xmax: -36182.83 ymax: -340029.8\nProjected CRS: NAD83 / California Albers\n       Tract   ZIP        County   ApproxLoc TotPop19   CIscore  CIscoreP\n1 6083002103 93454 Santa Barbara Santa Maria     4495 36.019653 69.162885\n2 6083002402 93455 Santa Barbara Santa Maria    13173 37.030667 70.637922\n3 6083002102 93454 Santa Barbara Santa Maria     2398 31.213140 61.069087\n4 6083002010 93455 Santa Barbara      Orcutt     4496  6.639331  5.988401\n5 6083002009 93455 Santa Barbara      Orcutt     4008 14.022852 23.121533\n6 6083002008 93455 Santa Barbara      Orcutt     7074  9.958479 12.808875\n       Ozone   OzoneP    PM2_5   PM2_5_P   DieselPM DieselPM_P   Pesticide\n1 0.03419029 10.56627 7.567724 10.031114 0.15457283   52.40821  1705.21702\n2 0.03521715 11.56192 7.624775 10.454263 0.10608759   39.36528 31524.11322\n3 0.03419029 10.56627 7.548835  9.931549 0.19047418   60.31114  2328.79749\n4 0.03624400 13.61543 7.660570 10.653391 0.09138437   34.27505  3237.52248\n5 0.03624400 13.61543 7.663210 10.690728 0.05097617   18.48164    14.98837\n6 0.03624400 13.61543 7.724757 11.126322 0.09044842   33.80212  6973.79475\n  PesticideP   Tox_Rel Tox_Rel_P   Traffic TrafficP DrinkWat DrinkWatP     Lead\n1   92.03448 13.685390  9.914979 1089.7315  63.4000 246.3727  11.16523 39.31056\n2   99.58621 14.766173 10.265066  486.0378  19.9000 441.0587  52.82877 44.64199\n3   93.82759 16.020654 10.515129  779.3813  42.7500 246.3727  11.16523 66.73806\n4   95.41379  6.183637  7.864466  744.7093  39.9250 335.2215  32.55901 18.81221\n5   63.24138  5.847123  7.714429  544.0408  24.3625 335.2215  32.55901 48.55917\n6   97.75862  7.395100  8.214554  717.6585  37.6000 336.4334  32.73386 35.56429\n    Lead_P Cleanup  CleanupP GWThreat GWThreatP HazWaste HazWasteP ImpWatBod\n1 36.11846     1.0 17.077268    73.15 94.720239    0.440  64.76506         9\n2 43.80592    13.5 72.396417   304.00 99.767558    2.800  95.55261        10\n3 75.07246     0.1  2.071669     7.50 39.448780    0.135  23.71939         9\n4 11.07750     0.0  0.000000     0.30  2.108584    0.200  35.61880         0\n5 49.51481     0.1  2.071669     0.00  0.000000    0.210  37.68365         0\n6 31.24134     0.1  2.071669     1.50 10.642537    0.100  16.63799         0\n  ImpWatBodP SolWaste SolWasteP PollBurd PolBurdSc  PolBurdP Asthma  AsthmaP\n1   77.29945        0   0.00000 40.72736  4.972803 45.003111  82.18 86.65254\n2   82.96934       18  97.64032 53.86904  6.577399 79.962663  48.80 54.79811\n3   77.29945        4  70.42383 40.37582  4.929880 43.858121  82.18 86.65254\n4    0.00000        0   0.00000 22.96380  2.803875  6.098320  41.11 43.34497\n5    0.00000        1  35.71592 23.37974  2.854662  6.583696  41.11 43.34497\n6    0.00000        0   0.00000 24.13117  2.946411  7.380212  41.11 43.34497\n  LowBirtWt  LowBirWP Cardiovas CardiovasP Educatn  EducatP Ling_Isol\n1      6.01 75.327175     12.69   52.00648    30.4 80.66312      18.2\n2      4.00 26.635874      7.60   10.81755    44.0 92.87522      18.2\n3      4.95 51.013600     12.69   52.00648    30.2 80.46064      13.3\n4      2.65  5.683859     10.31   32.41525     2.9 10.31384       0.0\n5      6.22 79.278933     10.31   32.41525    10.1 42.29309       4.3\n6      4.43 36.656402     10.31   32.41525     7.2 30.86560       1.7\n  Ling_IsolP Poverty  PovertyP Unempl  UnemplP HousBurd HousBurdP  PopChar\n1   83.84084    57.5 89.660804    3.1 18.31078     21.6  69.15082 69.82700\n2   83.84084    51.0 83.040201    7.2 69.13066     19.3  60.10139 54.27409\n3   72.25606    29.4 52.876884    4.3 35.02082     17.9  53.62484 61.03603\n4    0.00000     8.8  7.550251    6.1 58.35502     10.6  16.31179 22.82710\n5   33.30627    20.4 35.150754   12.1 92.39979      9.5  12.00253 47.35510\n6   13.30356    15.6 23.304020    5.6 52.52473     11.0  18.46641 32.58254\n  PopCharSc PopCharP Child_10 Pop_10_64 Elderly65 Hispanic   White AfricanAm\n1  7.243330 79.82854  18.4427   69.0545   12.5028  68.9210 20.8899    0.4004\n2  5.629987 56.55572  19.6462   75.0019    5.3519  78.6229 13.2240    2.5051\n3  6.331420 67.18356  15.0959   72.0183   12.8857  65.7214 30.6088    0.9591\n4  2.367913 10.74130  12.1441   73.4431   14.4128  22.9537 69.1948    0.9342\n5  4.912263 46.28089  12.8244   68.2884   18.8872  33.4082 59.7804    0.6986\n6  3.379868 23.82753  15.6630   68.4761   15.8609  33.4040 58.4111    2.6859\n  NativeAm OtherMult Shape_Leng Shape_Area   AAPI\n1   0.2670    1.3126   6999.358    2847611 8.2091\n2   0.0000    0.9489  19100.578   16352921 4.6990\n3   0.0000    2.1685   4970.986    1352329 0.5421\n4   0.7117    2.5356   6558.956    2417717 3.6699\n5   1.4721    1.3723   6570.369    2608422 3.2685\n6   0.0000    2.7000   8840.458    3302911 2.7990\n                        geometry\n1 MULTIPOLYGON (((-39795.07 -...\n2 MULTIPOLYGON (((-39795.07 -...\n3 MULTIPOLYGON (((-38115.75 -...\n4 MULTIPOLYGON (((-37341.66 -...\n5 MULTIPOLYGON (((-39465.11 -...\n6 MULTIPOLYGON (((-38569.1 -3...\n```\n:::\n:::\n\n\n## Example: CalEnviroScreen\n\nThe CalEnviroScreen data contains information on each tract's different environmental indicators and percentile ranks. We will practice data exploration and visualization using this dataset.\n\n# Univariate visualization\n\n## Summarizing categorical data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(ces_data$County)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n        Alameda          Alpine          Amador           Butte       Calaveras \n            360               1               9              51              10 \n         Colusa    Contra Costa       Del Norte       El Dorado          Fresno \n              5             207               7              42             199 \n          Glenn        Humboldt        Imperial            Inyo            Kern \n              6              30              31               6             151 \n          Kings            Lake          Lassen     Los Angeles          Madera \n             27              15               9            2343              23 \n          Marin        Mariposa       Mendocino          Merced           Modoc \n             55               6              20              49               4 \n           Mono        Monterey            Napa          Nevada          Orange \n              3              93              40              20             582 \n         Placer          Plumas       Riverside      Sacramento      San Benito \n             84               7             453             317              11 \n San Bernardino       San Diego   San Francisco     San Joaquin San Luis Obispo \n            369             627             195             139              53 \n      San Mateo   Santa Barbara     Santa Clara      Santa Cruz          Shasta \n            157              89             372              52              48 \n         Sierra        Siskiyou          Solano          Sonoma      Stanislaus \n              1              14              96              99              94 \n         Sutter          Tehama         Trinity          Tulare        Tuolumne \n             21              11               5              78              11 \n        Ventura            Yolo            Yuba \n            173              41              14 \n```\n:::\n:::\n\n\n## Summarizing categorical data {.smaller}\n\nThe `barplot` function takes a **named numeric vector** as its first argument:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = table(ces_data$County))\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n. . .\n\nIs this an effective visualization? Why or why not?\n\n## Summarizing categorical data {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# turn unemployment rate into categorical variable\nces_data$Unempl_Rate_Factor <- cut(\n  ces_data$Unempl, \n  breaks = c(0, 5, 10, 15, 20, 25, 100)\n)\ntable(ces_data$Unempl_Rate_Factor)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   (0,5]   (5,10]  (10,15]  (15,20]  (20,25] (25,100] \n    3408     3215      816      186       43       16 \n```\n:::\n\n```{.r .cell-code}\nbarplot(height = table(ces_data$Unempl_Rate_Factor))\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Customizing base R plots {.smaller}\n\nBase R plotting functions have many optional arguments allowing customization:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(\n  height = table(ces_data$Unempl_Rate_Factor), \n  main = \"Distribution of Census Tract Unemployment Rates\",\n  col = \"red\"\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Summarizing numerical data {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(\n  x = ces_data$Unempl, \n  main = \"Distribution of Census Tract Unemployment Rates\",\n  col = \"red\"\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Summarizing numerical data {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ces_data$Unempl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-999.00    3.40    5.30  -35.64    7.80   43.90 \n```\n:::\n:::\n\n\nThe CalEnviroScreen data uses -999 for missing data. We can use the `replace` function to replace these with NA values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(\n  x = replace(ces_data$Unempl, ces_data$Unempl == -999, NA), \n  main = \"Distribution of Census Tract Unemployment Rates\",\n  xlab = \"Unemployment Rate\",\n  col = \"red\"\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## Summarizing numerical data: boxplots {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(\n  x = replace(ces_data$Unempl, ces_data$Unempl == -999, NA), \n  main = \"Distribution of Census Tract Unemployment Rates\",\n  xlab = \"Unemployment Rate\", \n  horizontal = T,\n  col = \"red\"\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## Multivariate visualization {.smaller}\n\nThe `plot` function can be used to obtain scatter plots for two numerical variables:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remove spatial information\nces_data$geometry <- NULL\n\n# replace missing values\nces_data <- replace(ces_data, ces_data == -999, NA)\nplot(\n  x = ces_data$PolBurdSc, \n  y = ces_data$PopCharSc\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Multivariate visualization {.smaller}\n\nThe `plot` function can be used to obtain scatter plots for two numerical variables:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(\n  x = ces_data$PolBurdSc, \n  y = ces_data$PopCharSc,\n  xlab = \"Pollution Burden\",\n  ylab = \"Population Characteristics\",\n  col = \"blue\",\n  pch = 16, # change shape of points\n  cex = .5, # change size of points\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## Data visualization with `ggplot2` {.smaller}\n\n`ggplot2` is a fantastic package for making complex visualizations that many people find more intuitive to use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\nPlots are built sequentially using layers, so it's easy to edit and fine-tune the plots you generate.\n\nWhen using `ggplot2`, it is *essential* that your data are tidy! If they are not, the functions probably will not look like you expect.\n\nLet's work through how to build a plot layer by layer.\n\n## Data visualization with `ggplot2` {.smaller}\n\nFirst, let's initialize a plot. Use the `data` parameter to tell `ggplot` what data frame to use.\n\n-   It should be tidy data, in either a `data.frame` or `tibble`!\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(data = ces_data)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-18-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Select variables using `ggplot2` {.smaller}\n\nNext, we match **variables** to **aesthetics** within our plot. For example, let's put Pollution Burden on the x-axis. We do so using the function `aes()` within the initial `ggplot()` call.\n\n-   Possible aesthetics include axes as well as characteristics such as color, size, shape\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = ces_data,\n       aes(x = PolBurdSc)) \n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-20-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Map aesthetics to shapes using `ggplot2` {.smaller}\n\nNow `ggplot` knows what to plot, but it doesn't know how to plot it yet. Let's add a new layer that creates a histogram with `geom_histogram()`.\n\n-   This is a new layer! We add layers using the `+` operator.\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = ces_data,\n       aes(x = PolBurdSc)) +\n  geom_histogram()\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-22-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Customizing shapes {.smaller}\n\nWe can customize the shape within `geom_histogram()`:\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = ces_data,\n       aes(x = PolBurdSc)) +\n  geom_histogram(fill = 'red')\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-24-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Adding label and titles {.smaller}\n\nWe can finally add axis labels and a title using the `+` operator:\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4-5\"}\nggplot(data = ces_data,\n       aes(x = PolBurdSc)) +\n  geom_histogram(fill = 'red') + \n  xlab(\"Pollution Burden Score\") +\n  ggtitle(\"Histogram of Pollution Burden Score\")\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-26-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Subsetting our data {.smaller}\n\nRecall we can subset our data using the `dplyr::filter()` function. Note the use of the `%in%` operator here:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nsfba_counties <- c(\"Alameda\", \"Contra Costa\", \"Marin\", \"Napa\", \"San Francisco\",\n                   \"San Mateo\", \"Santa Clara\", \"Sonoma\", \"Solano\")\n# require county to be in SF Bay Area\nces_sfba <- ces_data |>\n  filter(County %in% sfba_counties)\nhead(ces_sfba)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Tract   ZIP      County     ApproxLoc TotPop19   CIscore  CIscoreP\n1 6085509201 94043 Santa Clara Mountain View     5524 12.788826 19.919314\n2 6085510500 94022 Santa Clara     Los Altos     4541  4.122372  1.714574\n3 6085509401 94306 Santa Clara     Palo Alto     3806 10.481222 14.044377\n4 6085509303 94043 Santa Clara Mountain View     3563 14.221995 23.562784\n5 6085503306 95122 Santa Clara      San Jose     4373 23.715224 45.978316\n6 6085503211 95121 Santa Clara      San Jose     4592 23.614422 45.688351\n       Ozone   OzoneP    PM2_5  PM2_5_P  DieselPM DieselPM_P Pesticide\n1 0.03716809 14.92222 8.232423 16.91350 0.6305833   93.91413         0\n2 0.03624400 13.61543 8.095511 14.76042 0.1860035   59.51462         0\n3 0.03624400 13.61543 8.181223 16.10454 0.4533547   87.66646         0\n4 0.03624400 13.61543 8.317675 18.56876 0.4539156   87.71624         0\n5 0.04125212 24.87866 8.835374 33.69011 0.1114884   40.72184         0\n6 0.04125212 24.87866 8.768682 31.98507 0.2847047   74.71064         0\n  PesticideP  Tox_Rel Tox_Rel_P   Traffic TrafficP DrinkWat DrinkWatP     Lead\n1          0 169.3650  31.44536 1646.1402  81.0375 428.4671  49.50668 21.88574\n2          0 195.1733  34.27107 1016.7001  59.0000 399.4475  43.36206 29.89372\n3          0 152.8043  29.56989 1293.1250  72.0750 509.0032  61.39628 41.26271\n4          0 146.4173  28.78220  912.1028  52.4875 428.4671  49.50668 32.28908\n5          0 143.2963  28.51963 1584.2238  79.7625 291.5255  22.74260 47.27127\n6          0 147.3003  28.94474 3469.8027  97.6875 291.5255  22.74260 39.04452\n    Lead_P Cleanup CleanupP GWThreat GWThreatP HazWaste HazWasteP ImpWatBod\n1 14.45495   65.50 97.79769   101.80  96.77901     0.58  73.60688         5\n2 23.79332    9.35 59.07055    10.00  47.43483     0.30  50.13898         0\n3 38.95400   10.40 62.03807     6.00  35.01577     0.30  50.13898         0\n4 26.96912   40.95 93.76633    39.05  85.55537     0.08  10.54931         4\n5 47.62445    3.50 33.87458     0.00   0.00000     0.15  26.67108         0\n6 35.68998    2.45 27.93953     5.75  32.77436     0.12  20.31767         3\n  ImpWatBodP SolWaste SolWasteP PollBurd PolBurdSc PolBurdP Asthma    AsthmaP\n1   51.21798        0         0 46.47630  5.674747 60.89608  19.22  8.1879362\n2    0.00000        0         0 31.13603  3.801704 20.13690   7.95  0.2367896\n3    0.00000        0         0 36.42799  4.447850 32.86870  12.05  1.6076770\n4   43.78412        0         0 38.71417  4.726992 39.34039  19.77  9.0353938\n5    0.00000        0         0 27.19803  3.320874 12.39577  57.49 66.1764706\n6   33.15834        0         0 33.99926  4.151303 26.57125  39.81 41.3010967\n  LowBirtWt  LowBirWP Cardiovas CardiovasP Educatn   EducatP Ling_Isol\n1      3.97 25.904542      8.52 17.3354935     2.5  8.415591       4.6\n2      3.16 10.944316      4.43  0.3614158     2.9 10.313845       2.7\n3      3.83 22.645625      6.26  4.4366899     7.9 33.890154      10.7\n4      2.72  6.209905      8.77 19.2048853    11.0 45.178436      14.7\n5      5.88 72.850911     12.25 48.2178465    40.0 89.977221      16.5\n6      5.15 56.351039     10.14 30.9322034    28.2 77.866363      25.3\n  Ling_IsolP Poverty PovertyP Unempl   UnemplP HousBurd HousBurdP  PopChar\n1   35.33631    14.7 21.26884    4.1 32.274857     14.2  34.24588 21.72548\n2   21.42374     7.4  4.91206    4.2 33.576262     10.3  15.06971 10.45331\n3   64.40655    11.8 14.27136    4.8 41.840187     12.3  24.94297 22.71679\n4   76.64095    20.3 34.92462    2.2  7.769391     21.3  68.11153 29.00419\n5   80.38977    26.2 46.82161    7.7 73.412285     27.4  85.75412 68.84304\n6   92.61064    18.7 31.25628    8.7 79.724102     17.7  52.61090 54.83755\n  PopCharSc  PopCharP Child_10 Pop_10_64 Elderly65 Hispanic   White AfricanAm\n1  2.253638  9.543621  10.7350   79.8878    9.3773   7.1687 52.4982    8.0920\n2  1.084349  1.159859  11.9577   60.8897   27.1526   2.1801 63.5543    0.2202\n3  2.356469 10.602622  13.8466   79.4009    6.7525  15.1077 33.9201    3.4419\n4  3.008677 18.557741   9.7390   70.5866   19.6744  15.2961 36.4861    4.2661\n5  7.141261 78.618255  10.4276   75.8290   13.7434  59.5472  2.7212    1.1434\n6  5.688436 57.387796   9.3859   73.6280   16.9861  28.2012 11.0409    1.4373\n  NativeAm OtherMult Shape_Leng Shape_Area    AAPI Unempl_Rate_Factor\n1   0.2715    3.4938   5862.187  1581581.5 28.4757              (0,5]\n2   0.0000    3.6336   7610.539  2592144.4 30.4118              (0,5]\n3   0.0000    4.1776   3401.365   666126.6 43.3526              (0,5]\n4   0.0000    8.4199   3211.309   575854.6 35.5319              (0,5]\n5   0.2058    1.0748   5951.985  1670328.7 35.3076             (5,10]\n6   0.0000    2.6568   4245.476  1076751.1 56.6638             (5,10]\n```\n:::\n:::\n\n\n## Scatter plots with `ggplot2` {.smaller}\n\nWe can easily add another **aesthetic** and change the **shape** to get a multivariate visualization:\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = ces_sfba,\n       aes(x = PolBurdSc, y = PopCharSc)) +\n  geom_point()\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-29-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Customizing our scatter plot {.smaller}\n\nWe can similarly customize our scatter plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-6\"}\nggplot(data = ces_sfba,\n       aes(x = PolBurdSc, y = PopCharSc)) +\n  geom_point(color = 'red', alpha = 0.5)  +\n  xlab(\"Pollution Burden Score\") +\n  ylab(\"Population Characteristic Score\") +\n  ggtitle(\"Scatterplot of CalEnviroScreen Scores\")\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-31-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Beyond two dimensions {.smaller}\n\nWe can add even more mappings between aesthetics and variables to explore multivariate relationships:\n\n::: columns\n::: {.column width=\"55%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = ces_sfba,\n       aes(x = PolBurdSc, y = PopCharSc, color = County)) +\n  geom_point(alpha = 0.5)  +\n  xlab(\"Pollution Burden Score\") +\n  ylab(\"Population Characteristic Score\") +\n  ggtitle(\"Scatterplot of CalEnviroScreen Scores\")\n```\n:::\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-33-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n# General principles for data visualization\n\n## Customizing our scatter plot {.smaller}\n\nWe can similarly customize our scatter plots\n\n::: columns\n::: {.column width=\"50%\"}\n**Avoid:**\n\n-   3D plots\n-   Deceptive axes\n-   Excessive labels\n-   Excessive/bad coloring\n-   Fancy shading/effects\n-   Bad variable/axis names\n-   Unreadable labels\n-   Overloaded with information\n:::\n\n::: {.column width=\"50%\"}\n**Strive for:**\n\n-   Simple, clean graphics\n-   Neat and human readable text\n-   Appropriate data range (bar charts should *always* start from 0!)\n-   Consistent intervals\n-   Roughly \\~6 colors or less\n-   Size figures appropriately\n:::\n:::\n\n## Some misleading visualizations\n\n<img src=\"images/bad1.jpg\" height=\"450\"/>\n\n**Avoid:** Pie charts! Eugh! The proportions are completely off!\n\n## Some misleading visualizations\n\n<img src=\"images/bad2.jpg\" height=\"450\"/>\n\n**Avoid:** Pie charts! Eugh! Percents don't add up!\n\n## Some misleading visualizations\n\n<img src=\"images/bad3.png\" height=\"450\"/>\n\n**Avoid:** 3d bar charts?!\n\n## Some misleading visualizations\n\n<img src=\"images/bad4.png\" height=\"450\"/>\n\n**Avoid:** Bad use of color\n\n## Some misleading visualizations\n\n<img src=\"images/bad5.jpg\" height=\"450\"/>\n\n**Avoid:** Bad axis, lack of information, 3D bar chart\n\n## Some misleading visualizations\n\n<img src=\"images/bad6.jpg\" height=\"450\"/>\n\n**Avoid:** Four numbers displayed as a cluttered chart, terrible labels, bad axis range\n\n## Some misleading visualizations\n\n<img src=\"images/bad7.jpg\" height=\"450\"/>\n\n**Avoid:** Deceptively flipped y-axis! (and excessive color)\n\n## Some misleading visualizations\n\n<img src=\"images/bad8.jpg\" height=\"450\"/>\n\n(This was presented in Congress!)\\]\n\n**Avoid:** Two axes in a single plot, bad axis range\n\n## Some misleading visualizations\n\n<img src=\"images/bad9.png\" height=\"450\"/>\n\n**Avoid:** Deceptive axis range (should start at 0)\n\n## Some misleading visualizations\n\n<img src=\"images/bad10.png\" height=\"450\"/>\n\n(From the Gates Foundation!)\n\n**Avoid:** Inconsistent x-axis intervals\n\n## ggplot cheatsheet\n\n-   Axes: `xlim()`, `ylim()`\n-   Legends: within initial `aes()`, edit within `theme()` or `guides()`\n-   `geom_point()`, `geom_line()`, `geom_histogram()`, `geom_bar()`, `geom_boxplot()`, `geom_text()`\n-   `facet_grid()`, `facet_wrap()` for faceting\n-   `labs()` for labels\n-   `theme_bw()` to make things look nicer\n-   Graphical parameters: `color` for color, `alpha` for opacity, `lwd`/`size` for thickness, `shape` for shape, `fill` for interior color, ...\n\nFind more tips [here!](https://github.com/rstudio/cheatsheets/raw/master/data-visualization.pdf)\n\n## Lab 04\n\nIn this lab, we'll practice data visualization with base R and `ggplot2`.\n",
    "supporting": [
      "07_visualizing-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}