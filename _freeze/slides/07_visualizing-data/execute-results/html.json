{
  "hash": "fc3840e23301285584932beed901eee5",
  "result": {
    "markdown": "---\ntitle: \"MATH167R: Data visualization\"\nauthor: \"Peter Gao\"\nformat: \n  revealjs:\n    theme: [./slides.scss, ../theme.scss]\neditor: visual\n---\n\n\n## Warm-up\n\n1.  What does the following code do?\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    library(palmerpenguins)\n    library(tidyverse)\n    data(penguins)\n    penguins |> \n      group_by(species, island) |>\n      summarize(mean_body_mass = mean(body_mass_g, na.rm = T))\n    ```\n    :::\n\n\n## Warm-up\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nlibrary(tidyverse)\ndata(penguins)\npenguins |> \n  group_by(species, island) |>\n  summarize(mean_body_mass = mean(body_mass_g, na.rm = T))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n# Groups:   species [3]\n  species   island    mean_body_mass\n  <fct>     <fct>              <dbl>\n1 Adelie    Biscoe             3710.\n2 Adelie    Dream              3688.\n3 Adelie    Torgersen          3706.\n4 Chinstrap Dream              3733.\n5 Gentoo    Biscoe             5076.\n```\n:::\n:::\n\n\n## Overview of today\n\n-   Data visualization in base R\n-   Data visualization with `ggplot2`\n-   Principles of data visualization\n\n## Data visualization\n\n## Why look at data?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Why look at data?\n\nAll of these datasets have the same means for `x` and `y`, and (approximately) the same correlation:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 4\n   dataset    mean_x mean_y correlation\n   <chr>       <dbl>  <dbl>       <dbl>\n 1 away         54.3   47.8        -0.1\n 2 bullseye     54.3   47.8        -0.1\n 3 circle       54.3   47.8        -0.1\n 4 dino         54.3   47.8        -0.1\n 5 dots         54.3   47.8        -0.1\n 6 h_lines      54.3   47.8        -0.1\n 7 high_lines   54.3   47.8        -0.1\n 8 slant_down   54.3   47.8        -0.1\n 9 slant_up     54.3   47.8        -0.1\n10 star         54.3   47.8        -0.1\n11 v_lines      54.3   47.8        -0.1\n12 wide_lines   54.3   47.8        -0.1\n13 x_shape      54.3   47.8        -0.1\n```\n:::\n:::\n\n\n## Why look at data?\n\n![](https://socviz.co/assets/ch-01-jackman-outlier.png){fig-align=\"center\"}\n\nfrom Jackson (1980) as reproduced in Kieran Healy's *Data Visualization.*\n\n## What makes a good data visualization?\n\n1.  Legibility: Is it easy for the viewer to understand and interpret your visual?\n2.  Integrity: Does the visual accurately communicate some insight about the data?\n3.  Beauty: Is the visual appealing and uncluttered?\n\nOther Readings:\n\n-   [Information is Beautiful](https://informationisbeautiful.net/visualizations/what-makes-a-good-data-visualization/)\n\n## Legibility\n\n![](https://socviz.co/assets/ch-01-perception-adelson-checkershow.jpg){fig-align=\"center\"}\n\nfrom Edward H. Adelson as reproduced in Kieran Healy's *Data Visualization.*\n\n## Legibility\n\n![](https://socviz.co/dataviz-pdfl_files/figure-html4/ch-01-dual-search-1.png){fig-align=\"center\"}\n\n## Legibility\n\n![](https://socviz.co/dataviz-pdfl_files/figure-html4/ch-01-multichannel-1.png)\n\nfrom Kieran Healy's *Data Visualization.*\n\n## Integrity\n\n![](https://socviz.co/assets/ch-01-democracy-nyt-version.png){fig-align=\"center\"}\n\n## Integrity\n\n![](https://socviz.co/assets/ch-01-democracy-voeten-version-2.png)\n\n## Example: Movies data {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018/2018-10-23/movie_profit.csv\")\n```\n:::\n\n::: {.cell hash='07_visualizing-data_cache/revealjs/unnamed-chunk-6_3987ae01e2d11d81e3fcb4e9a11cf6c8'}\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:300px; \"><table class=\"table table-striped\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> ...1 </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> release_date </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> movie </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> production_budget </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> domestic_gross </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> worldwide_gross </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> distributor </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> mpaa_rating </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> genre </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 6/22/2007 </td>\n   <td style=\"text-align:left;\"> Evan Almighty </td>\n   <td style=\"text-align:right;\"> 1.75e+08 </td>\n   <td style=\"text-align:right;\"> 100289690 </td>\n   <td style=\"text-align:right;\"> 174131329 </td>\n   <td style=\"text-align:left;\"> Universal </td>\n   <td style=\"text-align:left;\"> PG </td>\n   <td style=\"text-align:left;\"> Comedy </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 7/28/1995 </td>\n   <td style=\"text-align:left;\"> Waterworld </td>\n   <td style=\"text-align:right;\"> 1.75e+08 </td>\n   <td style=\"text-align:right;\"> 88246220 </td>\n   <td style=\"text-align:right;\"> 264246220 </td>\n   <td style=\"text-align:left;\"> Universal </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 5/12/2017 </td>\n   <td style=\"text-align:left;\"> King Arthur: Legend of the Sword </td>\n   <td style=\"text-align:right;\"> 1.75e+08 </td>\n   <td style=\"text-align:right;\"> 39175066 </td>\n   <td style=\"text-align:right;\"> 139950708 </td>\n   <td style=\"text-align:left;\"> Warner Bros. </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> 12/25/2013 </td>\n   <td style=\"text-align:left;\"> 47 Ronin </td>\n   <td style=\"text-align:right;\"> 1.75e+08 </td>\n   <td style=\"text-align:right;\"> 38362475 </td>\n   <td style=\"text-align:right;\"> 151716815 </td>\n   <td style=\"text-align:left;\"> Universal </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:left;\"> 6/22/2018 </td>\n   <td style=\"text-align:left;\"> Jurassic World: Fallen Kingdom </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 416769345 </td>\n   <td style=\"text-align:right;\"> 1304866322 </td>\n   <td style=\"text-align:left;\"> Universal </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:left;\"> 8/1/2014 </td>\n   <td style=\"text-align:left;\"> Guardians of the Galaxy </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 333172112 </td>\n   <td style=\"text-align:right;\"> 771051335 </td>\n   <td style=\"text-align:left;\"> Walt Disney </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:left;\"> 5/7/2010 </td>\n   <td style=\"text-align:left;\"> Iron Man 2 </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 312433331 </td>\n   <td style=\"text-align:right;\"> 621156389 </td>\n   <td style=\"text-align:left;\"> Paramount Pictures </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:left;\"> 4/4/2014 </td>\n   <td style=\"text-align:left;\"> Captain America: The Winter Soldier </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 259746958 </td>\n   <td style=\"text-align:right;\"> 714401889 </td>\n   <td style=\"text-align:left;\"> Walt Disney </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:left;\"> 7/11/2014 </td>\n   <td style=\"text-align:left;\"> Dawn of the Planet of the Apes </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 208545589 </td>\n   <td style=\"text-align:right;\"> 710644566 </td>\n   <td style=\"text-align:left;\"> 20th Century Fox </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:left;\"> 11/10/2004 </td>\n   <td style=\"text-align:left;\"> The Polar Express </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 186493587 </td>\n   <td style=\"text-align:right;\"> 310634169 </td>\n   <td style=\"text-align:left;\"> Warner Bros. </td>\n   <td style=\"text-align:left;\"> G </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> 6/1/2012 </td>\n   <td style=\"text-align:left;\"> Snow White and the Huntsman </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 155136755 </td>\n   <td style=\"text-align:right;\"> 401021746 </td>\n   <td style=\"text-align:left;\"> Universal </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:left;\"> 7/1/2003 </td>\n   <td style=\"text-align:left;\"> Terminator 3: Rise of the Machines </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 150358296 </td>\n   <td style=\"text-align:right;\"> 433058296 </td>\n   <td style=\"text-align:left;\"> Warner Bros. </td>\n   <td style=\"text-align:left;\"> R </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:left;\"> 5/7/2004 </td>\n   <td style=\"text-align:left;\"> Van Helsing </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 120150546 </td>\n   <td style=\"text-align:right;\"> 300150546 </td>\n   <td style=\"text-align:left;\"> Universal </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:left;\"> 5/22/2015 </td>\n   <td style=\"text-align:left;\"> Tomorrowland </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 93436322 </td>\n   <td style=\"text-align:right;\"> 207283457 </td>\n   <td style=\"text-align:left;\"> Walt Disney </td>\n   <td style=\"text-align:left;\"> PG </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 15 </td>\n   <td style=\"text-align:left;\"> 5/27/2016 </td>\n   <td style=\"text-align:left;\"> Alice Through the Looking Glass </td>\n   <td style=\"text-align:right;\"> 1.70e+08 </td>\n   <td style=\"text-align:right;\"> 77042381 </td>\n   <td style=\"text-align:right;\"> 276934087 </td>\n   <td style=\"text-align:left;\"> Walt Disney </td>\n   <td style=\"text-align:left;\"> PG </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:left;\"> 5/21/2010 </td>\n   <td style=\"text-align:left;\"> Shrek Forever After </td>\n   <td style=\"text-align:right;\"> 1.65e+08 </td>\n   <td style=\"text-align:right;\"> 238736787 </td>\n   <td style=\"text-align:right;\"> 756244673 </td>\n   <td style=\"text-align:left;\"> Paramount Pictures </td>\n   <td style=\"text-align:left;\"> PG </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:left;\"> 11/4/2016 </td>\n   <td style=\"text-align:left;\"> Doctor Strange </td>\n   <td style=\"text-align:right;\"> 1.65e+08 </td>\n   <td style=\"text-align:right;\"> 232641920 </td>\n   <td style=\"text-align:right;\"> 676486457 </td>\n   <td style=\"text-align:left;\"> Walt Disney </td>\n   <td style=\"text-align:left;\"> PG-13 </td>\n   <td style=\"text-align:left;\"> Action </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:left;\"> 11/7/2014 </td>\n   <td style=\"text-align:left;\"> Big Hero 6 </td>\n   <td style=\"text-align:right;\"> 1.65e+08 </td>\n   <td style=\"text-align:right;\"> 222527828 </td>\n   <td style=\"text-align:right;\"> 652127828 </td>\n   <td style=\"text-align:left;\"> Walt Disney </td>\n   <td style=\"text-align:left;\"> PG </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:left;\"> 3/26/2010 </td>\n   <td style=\"text-align:left;\"> How to Train Your Dragon </td>\n   <td style=\"text-align:right;\"> 1.65e+08 </td>\n   <td style=\"text-align:right;\"> 217581232 </td>\n   <td style=\"text-align:right;\"> 494870992 </td>\n   <td style=\"text-align:left;\"> Paramount Pictures </td>\n   <td style=\"text-align:left;\"> PG </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:left;\"> 11/2/2012 </td>\n   <td style=\"text-align:left;\"> Wreck-It Ralph </td>\n   <td style=\"text-align:right;\"> 1.65e+08 </td>\n   <td style=\"text-align:right;\"> 189412677 </td>\n   <td style=\"text-align:right;\"> 496511521 </td>\n   <td style=\"text-align:left;\"> Walt Disney </td>\n   <td style=\"text-align:left;\"> PG </td>\n   <td style=\"text-align:left;\"> Adventure </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\n## Univariate visualizations\n\nUnivariate visualizations describe **one** variable at a time.\n\nFor categorical variables, usually bar plots or pie charts are used.\n\nFor numerical variables, usually histograms, box plots, or density plots are used.\n\n## Summarizing categorical data with a table\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(movies$genre)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   Action Adventure    Comedy     Drama    Horror \n      573       481       813      1236       298 \n```\n:::\n:::\n\n\n## Visualizing a categorical variable {.smaller}\n\nThe `barplot` function takes a **named numeric vector** as its first argument:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = table(movies$genre))\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Customizing base R plots {.smaller}\n\nBase R plotting functions have many optional arguments allowing customization:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(\n  height = table(movies$genre), \n  main = \"Distribution of Movie Genres in Tidy Tuesday dataset\",\n  col = \"red\"\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Visualizing a categorical variable {.smaller}\n\nThe `pie` function takes a **named numeric vector** as its first argument:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npie(x = table(movies$genre))\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Summarizing a numerical variable {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(movies$worldwide_gross)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.000e+00 1.062e+07 4.016e+07 9.412e+07 1.176e+08 1.305e+09 \n```\n:::\n:::\n\n\n## Visualizing a numerical variable {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(\n  x = movies$worldwide_gross, \n  main = \"Distribution of Worldwide Gross of Movies\",\n  col = \"red\"\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\nWhat shape does this distribution have?\n\n## Visualizing a numerical variable {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(\n  x = movies$worldwide_gross, \n  main = \"Distribution of Worldwide Gross\",\n  xlab = \"Worldwide Gross ($)\",\n  col = \"red\",\n  horizontal = T\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## Visualizing a numerical variable {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(\n  x = movies$production_budget, \n  main = \"Distribution of Production Budget\",\n  xlab = \"Budget ($)\",\n  col = \"red\",\n  horizontal = T\n)\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Multivariate visualizations\n\nHow might we plot the relationship between a numerical variable and a categorical variable?\n\nHow about between two categorical variables? Between two numerical variables?\n\nWhat if we want to visualize three variables at once?\n\n## Visualizing two numerical variables {.smaller}\n\nThe `plot` function can be used to obtain scatter plots for two numerical variables:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(\n  x = movies$production_budget, \n  y = movies$worldwide_gross, \n  main = \"Worldwide Gross vs. Production Budget\",\n  xlab = \"Budget ($)\",\n  ylab = \"Worldwide Gross ($)\",\n  col = \"blue\",\n)\n```\n:::\n\n\n## Visualizing two numerical variables {.smaller}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## Visualizing a numerical variable and a categorical variable\n\nThe `plot` function can be used to obtain stacked boxplots for two numerical variables:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(worldwide_gross ~ genre,\n        data = movies, \n        main = \"Distribution of Worldwide Gross by Genre\"\n        xlab = \"Worldwide Gross ($)\",\n        ylab = \"\",\n        horizontal = T,\n        las = 1)\n```\n:::\n\n\n## Visualizing two categorical variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(movies$genre, movies$mpaa_rating)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           \n              G  PG PG-13   R\n  Action      1  34   225 286\n  Adventure  67 309    83  14\n  Comedy      6  79   328 367\n  Drama      11 144   398 645\n  Horror      0   7    58 202\n```\n:::\n:::\n\n\n## Visualizing two categorical variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(table(movies$genre, movies$mpaa_rating),\n        legend =  c(\"Action\", \"Adventure\", \"Comedy\", \"Drama\", \"Horror\"))\n```\n\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n## Data visualization with `ggplot2` {.smaller}\n\n`ggplot2` is a fantastic package for making complex visualizations that many people find more intuitive to use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\nPlots are built sequentially using layers, so it's easy to edit and fine-tune the plots you generate.\n\nWhen using `ggplot2`, it is *essential* that your data are properly formatted If they are not, the results probably will not look like you expect.\n\nLet's work through how to build a plot layer by layer.\n\n## Data visualization with `ggplot2` {.smaller}\n\nFirst, let's initialize a plot. Use the `data` parameter to tell `ggplot` what data frame to use.\n\n-   It should be tidy data, in either a `data.frame` or `tibble`!\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\nggplot(data = movies)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-22-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Select variables using `ggplot2` {.smaller}\n\nNext, we match **variables** to **aesthetics** within our plot. For example, let's put Pollution Burden on the x-axis. We do so using the function `aes()` within the initial `ggplot()` call.\n\n-   Possible aesthetics include axes as well as characteristics such as color, size, shape\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = movies,\n       aes(x = production_budget)) \n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-24-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Map aesthetics to shapes using `ggplot2` {.smaller}\n\nNow `ggplot` knows what to plot, but it doesn't know how to plot it yet. Let's add a new layer that creates a histogram with `geom_histogram()`.\n\n-   This is a new layer! We add layers using the `+` operator.\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = movies,\n       aes(x = production_budget)) +\n  geom_histogram()\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-26-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Customizing shapes {.smaller}\n\nWe can customize the shape within `geom_histogram()`:\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = movies,\n       aes(x = production_budget)) +\n  geom_histogram(fill = 'red')\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-28-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Adding label and titles {.smaller}\n\nWe can finally add axis labels and a title using the `+` operator:\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4-5\"}\nggplot(data = movies,\n       aes(x = production_budget)) +\n  geom_histogram(fill = 'red') + \n  xlab(\"Budget ($)\") +\n  ggtitle(\"Distribution of Production Budgets\")\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-30-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Subsetting our data {.smaller}\n\nRecall we can subset our data using the `dplyr::filter()` function from `tidyverse`. Note the use of the `%in%` operator here:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remember you may need to run library(tidyverse)\nselect_genres <- c(\"Action\", \"Comedy\")\n# require county to be in SF Bay Area\naction_comedy <- movies |>\n  filter(genre %in% select_genres)\nhead(action_comedy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n   ...1 release_date movie      production_budget domestic_gross worldwide_gross\n  <dbl> <chr>        <chr>                  <dbl>          <dbl>           <dbl>\n1     1 6/22/2007    Evan Almi…         175000000      100289690       174131329\n2     2 7/28/1995    Waterworld         175000000       88246220       264246220\n3     4 12/25/2013   47 Ronin           175000000       38362475       151716815\n4     5 6/22/2018    Jurassic …         170000000      416769345      1304866322\n5     6 8/1/2014     Guardians…         170000000      333172112       771051335\n6     7 5/7/2010     Iron Man 2         170000000      312433331       621156389\n# ℹ 3 more variables: distributor <chr>, mpaa_rating <chr>, genre <chr>\n```\n:::\n:::\n\n\n## Scatter plots with `ggplot2` {.smaller}\n\nWe can easily add another **variable/aesthetic** pair and change the **shape** to get a multivariate visualization:\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = action_comedy,\n       aes(x = production_budget, y = worldwide_gross)) +\n  geom_point()\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-33-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Customizing our scatter plot {.smaller}\n\nWe can similarly customize our scatter plots\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-6\"}\nggplot(data = action_comedy,\n       aes(x = production_budget, y = worldwide_gross)) +\n  geom_point(color = 'red', alpha = 0.5)  +\n  xlab(\"Production Budget ($)\") +\n  ylab(\"Worldwide Gross ($)\") +\n  ggtitle(\"Worldwide Gross vs. Budget for \\nAction/Comedy Movies\")\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-35-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## Beyond two dimensions {.smaller}\n\nWe can add even more mappings between aesthetics and variables to explore multivariate relationships:\n\n::: columns\n::: {.column width=\"55%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = action_comedy,\n       aes(x = production_budget, y = worldwide_gross, color = genre)) +\n  geom_point(alpha = 0.5)  +\n  xlab(\"Production Budget ($)\") +\n  ylab(\"Worldwide Gross ($)\") +\n  ggtitle(\"Worldwide Gross vs. Budget for \\nAction/Comedy Movies\")\n```\n:::\n\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-37-1.png){width=384}\n:::\n:::\n\n:::\n:::\n\n## What to remember for ggplot2\n\nThe `ggplot2` package is built around a \"grammar of graphics\": a standard way of building plots layer by layer.\n\nThe three basic layers:\n\n1.  **Data**: a data frame with all of the variables of interest\n2.  **Aesthetics**: graphical dimensions like `x`, `y`, `color`, `shape`, and more.\n3.  **Geometries**: the specific markings used to illustrate your variables and aesthetics.\n\n## What to remember for ggplot2\n\nWriting `ggplot2` code can be confusing since most people are used to thinking about the geometry first.\n\nOne approach that may help:\n\n1.  Start by picking a geometry (ex. `geom_point()`).\n2.  Research the available aesthetics for that geometry (ex. `x`, `y`, `color`, `shape`, `size`). Not all aesthetics are available for all geometries.\n3.  Map variables to the dataset to the relevant aesthetics.\n\n## Beyond two dimensions {.smaller}\n\nBe sure to avoid making your visualization overly complicated:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = movies,\n       aes(x = production_budget, \n           y = worldwide_gross, \n           color = genre,\n           shape = mpaa_rating,\n           size = domestic_gross)) +\n  geom_point(alpha = 0.5)  +\n  xlab(\"Production Budget ($)\") +\n  ylab(\"Worldwide Gross ($)\") +\n  ggtitle(\"Worldwide Gross vs. Budget\")\n```\n:::\n\n\n## Beyond two dimensions {.smaller}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_visualizing-data_files/figure-revealjs/unnamed-chunk-39-1.png){width=960}\n:::\n:::\n\n\n## ggplot cheatsheet\n\n-   Axes: `xlim()`, `ylim()`\n-   Legends: within initial `aes()`, edit within `theme()` or `guides()`\n-   `geom_point()`, `geom_line()`, `geom_histogram()`, `geom_bar()`, `geom_boxplot()`, `geom_text()`\n-   `facet_grid()`, `facet_wrap()` for faceting\n-   `labs()` for labels\n-   `theme_bw()` to make things look nicer\n-   Graphical parameters: `color` for color, `alpha` for opacity, `lwd`/`size` for thickness, `shape` for shape, `fill` for interior color, ...\n\nFind more tips [here!](https://github.com/rstudio/cheatsheets/raw/master/data-visualization.pdf)\n\n## General principles for data visualization\n\n::: columns\n::: {.column width=\"50%\"}\n**Avoid:**\n\n-   3D plots\n-   Deceptive axes\n-   Excessive labels\n-   Excessive/bad coloring\n-   Fancy shading/effects\n-   Bad variable/axis names\n-   Unreadable labels\n-   Overloaded with information\n:::\n\n::: {.column width=\"50%\"}\n**Strive for:**\n\n-   Simple, clean graphics\n-   Neat and human readable text\n-   Appropriate data range (bar charts should *always* start from 0!)\n-   Consistent intervals\n-   Roughly \\~6 colors or less\n-   Size figures appropriately\n:::\n:::\n\n## Sometimes breaking the rules is okay...\n\n![](https://upload.wikimedia.org/wikipedia/commons/2/29/Minard.png){fig-align=\"center\"}\n\nCharles Minard\n\n## Sometimes breaking the rules is okay...\n\n![](https://th-thumbnailer.cdn-si-edu.com/h2WL28E-CZgGj-Lrvs40-3PMAOE=/1000x750/filters:no_upscale():focal(1223x1116:1224x1117)/https://tf-cmsv2-smithsonianmag-media.s3.amazonaws.com/filer/3b/22/3b22a3d0-0a6f-42fb-a1d6-58019a3d9312/11_33873a_city_and_rural_population_18901.png)\n\nW.E.B. DuBois\n\n## Sometimes breaking the rules is okay...\n\n![](https://upload.wikimedia.org/wikipedia/commons/1/17/Nightingale-mortality.jpg)\n\nFlorence Nightingale\n\n## Lab 04\n\nIn this lab, we'll practice data visualization with base R and `ggplot2`.\n\n## Some misleading visualizations\n\n<img src=\"images/bad1.jpg\" height=\"450\"/>\n\n**Avoid:** Pie charts? The proportions are completely off.\n\n## Some misleading visualizations\n\n<img src=\"images/bad2.jpg\" height=\"450\"/>\n\n**Avoid:** Pie charts? Percentages don't add up.\n\n## Some misleading visualizations\n\n<img src=\"images/bad3.png\" height=\"450\"/>\n\n**Avoid:** 3d bar charts?!\n\n## Some misleading visualizations\n\n<img src=\"images/bad4.png\" height=\"450\"/>\n\n**Avoid:** Bad use of color\n\n## Some misleading visualizations\n\n<img src=\"images/bad5.jpg\" height=\"450\"/>\n\n**Avoid:** Bad axis, lack of information, 3D bar chart\n\n## Some misleading visualizations\n\n<img src=\"images/bad6.jpg\" height=\"450\"/>\n\n**Avoid:** Four numbers displayed as a cluttered chart, terrible labels, bad axis range\n\n## Some misleading visualizations\n\n<img src=\"images/bad7.jpg\" height=\"450\"/>\n\n**Avoid:** Deceptively flipped y-axis! (and excessive color)\n\n## Some misleading visualizations\n\n<img src=\"images/bad8.jpg\" height=\"450\"/>\n\n**Avoid:** Two axes in a single plot, bad axis range\n\n## Some misleading visualizations\n\n<img src=\"images/bad9.png\" height=\"450\"/>\n\n**Avoid:** Deceptive axis range (should start at 0)\n\n## Some misleading visualizations\n\n<img src=\"images/bad10.png\" height=\"450\"/>\n\n**Avoid:** Inconsistent x-axis intervals\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}