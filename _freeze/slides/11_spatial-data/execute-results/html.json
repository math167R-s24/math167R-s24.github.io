{
  "hash": "5cefef88d518cf6cabe90adacdba46c5",
  "result": {
    "markdown": "---\ntitle: \"MATH167R: Advanced visualizations\"\nauthor: \"Peter Gao\"\nformat: \n  revealjs:\n    theme: [./slides.scss, ../theme.scss]\neditor: visual\n---\n\n\n## Overview of today\n\n-   Visualizing spatial data\n-   Animations\n-   Project work time\n\n## Example: PM 2.5 data\n\nThe EPA provides daily data on air quality for monitoring stations across the country, which you can download [here](https://www.epa.gov/outdoor-air-quality-data/download-daily-data). The below code downloads a subset of this data from the course website for the pollutant PM 2.5 (atmospheric particulate matter with a diameter of less than 2.5 micrometers) and AQI for 2023.\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-1_88079df84b2e8b05ec7ea7b757a6b46c'}\n\n```{.r .cell-code}\npm_2_5 <- readr::read_csv(\"https://math167r-s24.github.io/static/CA_PM2_5_2023.csv\")\n```\n:::\n\n\n## Example: PM 2.5 data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(pm_2_5)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:480px; \"><table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Date </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Source </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Site ID </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> POC </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> Daily Mean PM2.5 Concentration </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> UNITS </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> DAILY_AQI_VALUE </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Site Name </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> DAILY_OBS_COUNT </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> PERCENT_COMPLETE </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> AQS_PARAMETER_CODE </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> AQS_PARAMETER_DESC </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> CBSA_CODE </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> CBSA_NAME </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> STATE_CODE </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> STATE </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> COUNTY_CODE </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> COUNTY </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> SITE_LATITUDE </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> SITE_LONGITUDE </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 01/01/2023 </td>\n   <td style=\"text-align:left;\"> AQS </td>\n   <td style=\"text-align:left;\"> 060010007 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 3.7 </td>\n   <td style=\"text-align:left;\"> ug/m3 LC </td>\n   <td style=\"text-align:right;\"> 15 </td>\n   <td style=\"text-align:left;\"> Livermore </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 88101 </td>\n   <td style=\"text-align:left;\"> PM2.5 - Local Conditions </td>\n   <td style=\"text-align:right;\"> 41860 </td>\n   <td style=\"text-align:left;\"> San Francisco-Oakland-Hayward, CA </td>\n   <td style=\"text-align:left;\"> 06 </td>\n   <td style=\"text-align:left;\"> California </td>\n   <td style=\"text-align:left;\"> 001 </td>\n   <td style=\"text-align:left;\"> Alameda </td>\n   <td style=\"text-align:right;\"> 37.68753 </td>\n   <td style=\"text-align:right;\"> -121.7842 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 01/02/2023 </td>\n   <td style=\"text-align:left;\"> AQS </td>\n   <td style=\"text-align:left;\"> 060010007 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 2.7 </td>\n   <td style=\"text-align:left;\"> ug/m3 LC </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> Livermore </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 88101 </td>\n   <td style=\"text-align:left;\"> PM2.5 - Local Conditions </td>\n   <td style=\"text-align:right;\"> 41860 </td>\n   <td style=\"text-align:left;\"> San Francisco-Oakland-Hayward, CA </td>\n   <td style=\"text-align:left;\"> 06 </td>\n   <td style=\"text-align:left;\"> California </td>\n   <td style=\"text-align:left;\"> 001 </td>\n   <td style=\"text-align:left;\"> Alameda </td>\n   <td style=\"text-align:right;\"> 37.68753 </td>\n   <td style=\"text-align:right;\"> -121.7842 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 01/03/2023 </td>\n   <td style=\"text-align:left;\"> AQS </td>\n   <td style=\"text-align:left;\"> 060010007 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 3.6 </td>\n   <td style=\"text-align:left;\"> ug/m3 LC </td>\n   <td style=\"text-align:right;\"> 15 </td>\n   <td style=\"text-align:left;\"> Livermore </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 88101 </td>\n   <td style=\"text-align:left;\"> PM2.5 - Local Conditions </td>\n   <td style=\"text-align:right;\"> 41860 </td>\n   <td style=\"text-align:left;\"> San Francisco-Oakland-Hayward, CA </td>\n   <td style=\"text-align:left;\"> 06 </td>\n   <td style=\"text-align:left;\"> California </td>\n   <td style=\"text-align:left;\"> 001 </td>\n   <td style=\"text-align:left;\"> Alameda </td>\n   <td style=\"text-align:right;\"> 37.68753 </td>\n   <td style=\"text-align:right;\"> -121.7842 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 01/04/2023 </td>\n   <td style=\"text-align:left;\"> AQS </td>\n   <td style=\"text-align:left;\"> 060010007 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 2.7 </td>\n   <td style=\"text-align:left;\"> ug/m3 LC </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> Livermore </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 88101 </td>\n   <td style=\"text-align:left;\"> PM2.5 - Local Conditions </td>\n   <td style=\"text-align:right;\"> 41860 </td>\n   <td style=\"text-align:left;\"> San Francisco-Oakland-Hayward, CA </td>\n   <td style=\"text-align:left;\"> 06 </td>\n   <td style=\"text-align:left;\"> California </td>\n   <td style=\"text-align:left;\"> 001 </td>\n   <td style=\"text-align:left;\"> Alameda </td>\n   <td style=\"text-align:right;\"> 37.68753 </td>\n   <td style=\"text-align:right;\"> -121.7842 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 01/05/2023 </td>\n   <td style=\"text-align:left;\"> AQS </td>\n   <td style=\"text-align:left;\"> 060010007 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 4.7 </td>\n   <td style=\"text-align:left;\"> ug/m3 LC </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:left;\"> Livermore </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 88101 </td>\n   <td style=\"text-align:left;\"> PM2.5 - Local Conditions </td>\n   <td style=\"text-align:right;\"> 41860 </td>\n   <td style=\"text-align:left;\"> San Francisco-Oakland-Hayward, CA </td>\n   <td style=\"text-align:left;\"> 06 </td>\n   <td style=\"text-align:left;\"> California </td>\n   <td style=\"text-align:left;\"> 001 </td>\n   <td style=\"text-align:left;\"> Alameda </td>\n   <td style=\"text-align:right;\"> 37.68753 </td>\n   <td style=\"text-align:right;\"> -121.7842 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 01/06/2023 </td>\n   <td style=\"text-align:left;\"> AQS </td>\n   <td style=\"text-align:left;\"> 060010007 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 9.2 </td>\n   <td style=\"text-align:left;\"> ug/m3 LC </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:left;\"> Livermore </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 88101 </td>\n   <td style=\"text-align:left;\"> PM2.5 - Local Conditions </td>\n   <td style=\"text-align:right;\"> 41860 </td>\n   <td style=\"text-align:left;\"> San Francisco-Oakland-Hayward, CA </td>\n   <td style=\"text-align:left;\"> 06 </td>\n   <td style=\"text-align:left;\"> California </td>\n   <td style=\"text-align:left;\"> 001 </td>\n   <td style=\"text-align:left;\"> Alameda </td>\n   <td style=\"text-align:right;\"> 37.68753 </td>\n   <td style=\"text-align:right;\"> -121.7842 </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\n## Example: PM 2.5 data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(pm_2_5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Date              Source            Site ID               POC        \n Length:51541       Length:51541       Length:51541       Min.   : 1.000  \n Class :character   Class :character   Class :character   1st Qu.: 2.000  \n Mode  :character   Mode  :character   Mode  :character   Median : 3.000  \n                                                          Mean   : 2.634  \n                                                          3rd Qu.: 3.000  \n                                                          Max.   :12.000  \n                                                                          \n Daily Mean PM2.5 Concentration    UNITS           DAILY_AQI_VALUE \n Min.   : -3.000                Length:51541       Min.   :  0.00  \n 1st Qu.:  3.900                Class :character   1st Qu.: 16.00  \n Median :  6.500                Mode  :character   Median : 27.00  \n Mean   :  7.823                                   Mean   : 30.64  \n 3rd Qu.: 10.000                                   3rd Qu.: 42.00  \n Max.   :235.100                                   Max.   :285.00  \n                                                                   \n  Site Name         DAILY_OBS_COUNT PERCENT_COMPLETE AQS_PARAMETER_CODE\n Length:51541       Min.   :1       Min.   :100      Min.   :88101     \n Class :character   1st Qu.:1       1st Qu.:100      1st Qu.:88101     \n Mode  :character   Median :1       Median :100      Median :88101     \n                    Mean   :1       Mean   :100      Mean   :88177     \n                    3rd Qu.:1       3rd Qu.:100      3rd Qu.:88101     \n                    Max.   :1       Max.   :100      Max.   :88502     \n                                                                       \n AQS_PARAMETER_DESC   CBSA_CODE      CBSA_NAME          STATE_CODE       \n Length:51541       Min.   :12540   Length:51541       Length:51541      \n Class :character   1st Qu.:31080   Class :character   Class :character  \n Mode  :character   Median :40140   Mode  :character   Mode  :character  \n                    Mean   :35282                                        \n                    3rd Qu.:41860                                        \n                    Max.   :49700                                        \n                    NA's   :3920                                         \n    STATE           COUNTY_CODE           COUNTY          SITE_LATITUDE  \n Length:51541       Length:51541       Length:51541       Min.   :32.58  \n Class :character   Class :character   Class :character   1st Qu.:34.21  \n Mode  :character   Mode  :character   Mode  :character   Median :36.60  \n                                                          Mean   :36.38  \n                                                          3rd Qu.:37.97  \n                                                          Max.   :41.76  \n                                                                         \n SITE_LONGITUDE  \n Min.   :-124.2  \n 1st Qu.:-121.5  \n Median :-119.8  \n Mean   :-119.8  \n 3rd Qu.:-118.2  \n Max.   :-115.5  \n                 \n```\n:::\n:::\n\n\n## Warm-up: PM 2.5 data\n\nWork with the people around you to identify:\n\n1.  Where and when was the highest `DAILY_AQI_VALUE` observed in 2023?\n2.  Which site had the highest median `DAILY_AQI_VALUE` in 2023?\n3.  How many monitoring sites are in Santa Clara County?\n4.  What is the name of the site in this dataset that is closest to SJSU's campus?\n5.  What is the median `DAILY_AQI_VALUE` for this site in 2023?\n\n## Warm-up: PM 2.5 data\n\nAnswers:\n\n1.  Yreka on August 28 (AQI = 285)\n2.  Cortina Indian Rancheria\n3.  3\n4.  San Jose - Jackson\n5.  29\n\n## Data wrangling\n\nNote that the `Date` variable is a character--we can convert this into a `Date` class object using the `lubridate` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\npm_2_5 <- pm_2_5 |>\n  mutate(Date = mdy(Date))\nsummary(pm_2_5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Date               Source            Site ID               POC        \n Min.   :2023-01-01   Length:51541       Length:51541       Min.   : 1.000  \n 1st Qu.:2023-03-26   Class :character   Class :character   1st Qu.: 2.000  \n Median :2023-06-21   Mode  :character   Mode  :character   Median : 3.000  \n Mean   :2023-06-23                                         Mean   : 2.634  \n 3rd Qu.:2023-09-18                                         3rd Qu.: 3.000  \n Max.   :2023-12-31                                         Max.   :12.000  \n                                                                            \n Daily Mean PM2.5 Concentration    UNITS           DAILY_AQI_VALUE \n Min.   : -3.000                Length:51541       Min.   :  0.00  \n 1st Qu.:  3.900                Class :character   1st Qu.: 16.00  \n Median :  6.500                Mode  :character   Median : 27.00  \n Mean   :  7.823                                   Mean   : 30.64  \n 3rd Qu.: 10.000                                   3rd Qu.: 42.00  \n Max.   :235.100                                   Max.   :285.00  \n                                                                   \n  Site Name         DAILY_OBS_COUNT PERCENT_COMPLETE AQS_PARAMETER_CODE\n Length:51541       Min.   :1       Min.   :100      Min.   :88101     \n Class :character   1st Qu.:1       1st Qu.:100      1st Qu.:88101     \n Mode  :character   Median :1       Median :100      Median :88101     \n                    Mean   :1       Mean   :100      Mean   :88177     \n                    3rd Qu.:1       3rd Qu.:100      3rd Qu.:88101     \n                    Max.   :1       Max.   :100      Max.   :88502     \n                                                                       \n AQS_PARAMETER_DESC   CBSA_CODE      CBSA_NAME          STATE_CODE       \n Length:51541       Min.   :12540   Length:51541       Length:51541      \n Class :character   1st Qu.:31080   Class :character   Class :character  \n Mode  :character   Median :40140   Mode  :character   Mode  :character  \n                    Mean   :35282                                        \n                    3rd Qu.:41860                                        \n                    Max.   :49700                                        \n                    NA's   :3920                                         \n    STATE           COUNTY_CODE           COUNTY          SITE_LATITUDE  \n Length:51541       Length:51541       Length:51541       Min.   :32.58  \n Class :character   Class :character   Class :character   1st Qu.:34.21  \n Mode  :character   Mode  :character   Mode  :character   Median :36.60  \n                                                          Mean   :36.38  \n                                                          3rd Qu.:37.97  \n                                                          Max.   :41.76  \n                                                                         \n SITE_LONGITUDE  \n Min.   :-124.2  \n 1st Qu.:-121.5  \n Median :-119.8  \n Mean   :-119.8  \n 3rd Qu.:-118.2  \n Max.   :-115.5  \n                 \n```\n:::\n:::\n\n\n## Wildfire season 2023\n\n![](images/Screenshot%202024-02-20%20at%2010.24.44%20AM.png)\n\n## Wildfire season 2023\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\njan1_pm_2_5 <- pm_2_5 |> filter(Date == \"2023-01-01\")\nhist(jan1_pm_2_5$`Daily Mean PM2.5 Concentration`,\n     main = \"Jan 1\",  xlab = \"PM 2.5\")\n```\n\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsep19_pm_2_5 <- pm_2_5 |> filter(Date == \"2023-09-19\")\nhist(sep19_pm_2_5$`Daily Mean PM2.5 Concentration`,\n     main = \"October 19\", xlab = \"PM 2.5\")\n```\n\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n:::\n\n## Working with spatial data\n\nWe can't get an idea of how air quality varies over space using univariate summaries like these. Ideally, we could plot the PM 2.5 or AQI measurements on a map of California.\n\n## Naively working with latitude/longitude\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = sep19_pm_2_5, \n       mapping = aes(x = SITE_LONGITUDE, \n                     y = SITE_LATITUDE, \n                     color = DAILY_AQI_VALUE)) +\n  geom_point() +\n  scale_color_viridis_c()\n```\n\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Naively working with latitude/longitude\n\nCompare with January 1:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = jan1_pm_2_5, \n       mapping = aes(x = SITE_LONGITUDE, \n                     y = SITE_LATITUDE, \n                     color = DAILY_AQI_VALUE)) +\n  geom_point() +\n  scale_color_viridis_c()\n```\n\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Naively working with latitude/longitude\n\nWe can only get so far just treating longitude and latitude as x and y. In particular, near the poles, we will get large amounts of distortion:\n\n![](https://upload.wikimedia.org/wikipedia/commons/8/83/Equirectangular_projection_SW.jpg)\n\n## Simple features\n\n**Simple Features** is a set of standards for storing and accessing geographic data.\n\n-   Geographic data typically consist of geometries such as points, lines, and polygons\n\n-   In R, the most popular package for working with simple features data is `sf`.\n\n-   Working with spatial data can be extremely memory intensive, so care is needed.\n\n## Converting data to simple features object\n\nWhen each row in our data frame refers to a point with longitude and latitude, we can use the `st_as_sf` function to convert our data frame to an `sf` object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nsep19_pm_2_5 <- sep19_pm_2_5 |>\n  st_as_sf(\n    # what columns hold lon/lat?\n    coords = c(\"SITE_LONGITUDE\", \"SITE_LATITUDE\"), \n     # what projection are we using?\n    crs = st_crs(4326)\n  ) \n```\n:::\n\n\n## Converting data to simple features object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(sep19_pm_2_5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 18 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -122.2823 ymin: 37.68753 xmax: -121.7842 ymax: 39.76168\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 19\n  Date       Source `Site ID`   POC Daily Mean PM2.5 Con…¹ UNITS DAILY_AQI_VALUE\n  <date>     <chr>  <chr>     <dbl>                  <dbl> <chr>           <dbl>\n1 2023-09-19 AQS    060010007     3                   21.7 ug/m…              71\n2 2023-09-19 AQS    060010009     3                   27.9 ug/m…              84\n3 2023-09-19 AQS    060010011     3                   29.6 ug/m…              88\n4 2023-09-19 AQS    060010012     3                   33.3 ug/m…              96\n5 2023-09-19 AQS    060010015     3                   25.7 ug/m…              80\n6 2023-09-19 AQS    060070008     3                    7.1 ug/m…              30\n# ℹ abbreviated name: ¹​`Daily Mean PM2.5 Concentration`\n# ℹ 12 more variables: `Site Name` <chr>, DAILY_OBS_COUNT <dbl>,\n#   PERCENT_COMPLETE <dbl>, AQS_PARAMETER_CODE <dbl>, AQS_PARAMETER_DESC <chr>,\n#   CBSA_CODE <dbl>, CBSA_NAME <chr>, STATE_CODE <chr>, STATE <chr>,\n#   COUNTY_CODE <chr>, COUNTY <chr>, geometry <POINT [°]>\n```\n:::\n:::\n\n\n## Visualizing point data\n\nWe can easily visualize this data now using the `geom_sf()` function, which automatically handles sf objects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sep19_pm_2_5) + geom_sf()\n```\n\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## Visualizing point data\n\nWe can add a basemap by downloading the outline of California from the `tigris` package.\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-13_626f156df3a36cb7f2434a59faa3133c'}\n\n```{.r .cell-code}\nlibrary(tigris)\nCA_sf <- states() |> filter(NAME == \"California\")\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-15_a06ed0a49e9a447ba1b55d595ff2fb82'}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = CA_sf) +\n  geom_sf(data = sep19_pm_2_5) \n```\n\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Visualizing point data\n\nWe can then adjust the color to show `DAILY_AQI_VALUE` and also change the color scale:\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-16_e310a9e7a5ff6d0cf8582185588ac6a3'}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = CA_sf) +\n  geom_sf(data = sep19_pm_2_5, \n          mapping = aes(color = DAILY_AQI_VALUE)) +\n  scale_color_viridis_c()\n```\n\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Exercise\n\nHow do we create the following plot?\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-17_a4d436d66f6c455f7abd082379c7363c'}\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Spatial Polygon data\n\nThe AQI data we downloaded also contains county information. We can compute county level mean AQI using `group_by` and `summarize`:\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-18_4379410c01cc232bda4b5a0603123eee'}\n\n```{.r .cell-code}\nsep19_county_means <- sep19_pm_2_5 |>\n  # remove the geometry; we don't need it here\n  st_set_geometry(NULL) |> \n  group_by(COUNTY) |>\n  summarize(AQI = mean(DAILY_AQI_VALUE))\n```\n:::\n\n\n## Spatial Polygon data\n\nWe can then create a county-level **polygon** map by downloading county-level boundaries using `tigris`.\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-19_ec50a051a53921119b6e09754a6dfdd7'}\n\n```{.r .cell-code}\nCA_counties_sf <- counties(state = \"CA\")\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-21_b7c958ad96fb908f09efeccf2252ed26'}\n\n```{.r .cell-code}\nsep19_county_means <- CA_counties_sf |>\n  right_join(sep19_county_means, by = c(\"NAME\" = \"COUNTY\")) \nggplot() +\n  geom_sf(data = CA_sf) +\n  geom_sf(data = sep19_county_means, aes(fill = AQI)) +\n  scale_fill_viridis_c() \n```\n:::\n\n\n## Spatial Polygon data\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-22_b967c30e520ccbca41388614cffe0331'}\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Animation with `gganimate`\n\nThe `gganimate` package provides tools for animating `ggplot` visualizations:\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-23_fbf79909f26b92761210cc286095f843'}\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-23-1.gif){fig-align='center' width=100%}\n:::\n:::\n\n\n## Animation with `gganimate`\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-24_47ba2cb89c4d94c1986aa17e45486e52'}\n\n```{.r .cell-code}\nggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  scale_x_log10() +\n  facet_wrap(~continent) +\n  # Here comes the gganimate specific bits\n  labs(title = 'Year: {frame_time}',\n       x = 'GDP per capita', \n       y = 'life expectancy') +\n  transition_time(year) +\n  ease_aes('linear')\n```\n:::\n\n\n## Animation with `gganimate`\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-25_3ef43694123ebda763bf4eefa22975f3'}\n::: {.cell-output-display}\n![](11_spatial-data_files/figure-revealjs/unnamed-chunk-25-1.gif){fig-align='center' width=100%}\n:::\n:::\n\n\n## Animation with `gganimate`\n\n\n::: {.cell layout-align=\"center\" hash='11_spatial-data_cache/revealjs/unnamed-chunk-26_5051bfb5948aa30aacdc3bf444d5a745'}\n\n```{.r .cell-code}\npm_2_5 <- readr::read_csv(\"https://math167r-s24.github.io/static/CA_PM2_5_2023.csv\")\npm_2_5 <- pm_2_5 |>\n  mutate(Date = mdy(Date)) |>\n  filter(month(Date) == 9)\nggplot() +\n  geom_sf(data = CA_sf) +\n  geom_point(data = pm_2_5, \n             mapping = aes(\n               x = SITE_LONGITUDE, \n               y = SITE_LATITUDE, \n               color = DAILY_AQI_VALUE\n             )) +\n  scale_color_viridis_c() +\n  # Here comes the gganimate specific bits\n  labs(title = \"Date: {frame_time}\") +\n  transition_time(Date) + \n  ease_aes('linear')\n```\n:::\n\n\n## Takeaways\n\n-   Packages like `sf` and `gganimate` are complex and frequently changing -- but extend `ggplot` for new types of data and visualizations.\n\n-   Don't need to memorize these packages' functions: get comfortable with documentation.\n\n-   Be creative and challenge yourself--don't limit yourself to the visuals we've created in class.\n\n## Other sources of spatial data\n\n-   [San Jose Open Data](https://data.sanjoseca.gov/group/geospatial)\n-   [San Francisco Open Data](https://datasf.org/opendata/)\n\n## Final project\n\nInstructions on the course website.\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}